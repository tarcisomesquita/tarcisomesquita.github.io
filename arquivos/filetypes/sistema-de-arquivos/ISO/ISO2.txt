ISO 9660 file system

sudo mount -t iso9660 -o loop file.iso ./iso

1 sector = 2048 B

First sector have number 0.

first 16 sectors is un-used.

Sector 16 contain a volume descriptor (size 1 sector).

Last volume descriptor is the Volume Descriptor Set Terminator.

Volume Descriptor Set Terminator
FF 43 44 30 30 31 01 followed by 2041 bytes zeros. (CD001) 


Each date and time field is of the following form:

length    contents
--------  ---------------------------------------------------------
   4      year, as four ASCII digits
   2      month, as two ASCII digits
   2      day of month, as two ASCII digits
   2      hour, as two ASCII digits, in the range from 00 to 23
   2      minute, as two ASCII digits, in the range from 00 to 59
   2      second, as two ASCII digits, in the range from 00 to 59
   2      hundredths of a second, as two ASCII digits, in the range from 00 to 99
   1      offset from Greenwich Mean Time, in 15-minute intervals

00008320  20 20 20 20 20 20 20 20  20 20 20 20 20 32 30 31  |             201|
00008330  37 31 30 31 37 32 30 35  33 35 36 30 30 00 32 30  |7101720535600.20|
00008340  31 37 31 30 31 37 32 30  35 33 35 36 30 30 00 00  |17101720535600..|


If the date and time are not specified, the first 16 bytes are all ASCII zeros (0x30), and the last byte is zero.


Volume Descriptors ignored by DOS, have the following format:

length    contents
--------  ---------------------------------------------------------
   1      neither 1 nor 255
   6      67, 68, 48, 48, 49 and 1, respectively (same as Volume Descriptor Set Terminator)
 2041     other things

00008800  00 43 44 30 30 31 01 45  4c 20 54 4f 52 49 54 4f  |.CD001.EL TORITO|
00008810  20 53 50 45 43 49 46 49  43 41 54 49 4f 4e 00 00  | SPECIFICATION..|
00008820  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|


Primary Volume Descriptor
offset    contents
--------  ---------------------------------------------------------
 000      1
 001      67, 68, 48, 48, 49 and 1, respectively (same as Volume Descriptor Set Terminator)
 006      0
 008      system identifier
 028      volume identifier
 048      zeros
 050      total number of sectors, as a both endian double word
 058      zeros
 078      1, as a both endian word [volume set size]
 07c      1, as a both endian word [volume sequence number]
 080      2048 (the sector size), as a both endian word
 084      path table length in bytes, as a both endian double word
 08c      number of first sector in first little endian path table, as a little endian double word
 090      number of first sector in second little endian path table, as a little endian double word, or zero if there is no second
 094      number of first sector in first big endian path table, as a big endian double word
 098      number of first sector in second big endian path table, as a big endian double word, or zero if there is no second 
 09c      root directory record, as described below
 0be      volume set identifier
 13e      publisher identifier
 1be      data preparer identifier
 23e      application identifier
 2be      copyright file identifier
 2e3      abstract file identifier
 308      bibliographical file identifier
 32d      date and time of volume creation
 33e      date and time of most recent modification
 34f      date and time when volume expires
 360      date and time when volume is effective
 371      1
 372      0
 373      reserved for application use (usually zeros)
 573      zeros at√© 0x800


A path table contains one record for each directory on the CD-ROM (including the root directory). The format of a record is as follows:

     length
     in bytes  contents
     --------  ---------------------------------------------------------
        1      N, the name length (or 1 for the root directory)
        1      0 [number of sectors in extended attribute record]
        4      number of the first sector in the directory, as a double word
        2      number of record for parent directory (or 1 for the root directory), as a word; the first record is number 1, the second record is number 2, etc.
        N      name (or 0 for the root directory)
      0 or 1   padding byte: if N is odd, this field contains a zero; if N is even, this field is omitted

According to ISO9660, a directory name consists of at least one and not more than 31 capital letters, digits and underscores. For DOS the upper limit is eight characters. 

The records in a path table are arranged in a precisely specified order. For this purpose, each directory has an associated number called its level. The level of the root directory is 1. The level of each other directory is one greater than the level of its parent. As noted above, ISO9660 does not permit levels greater than 8.

The relative positions of any two records are determined as follows:

    If the levels are different, the directory with the lower level appears first. In particular, this implies that the root directory is always represented by the first record in the table, because it is the only directory with level 1.
    If the levels are identical, but the directories have different parents, then the directories are in the same relative positions as their parents.
    Directories with the same level and the same parent are arranged in the order obtained by sorting on their names, as described in Section 5. 



unlike path records, directory records may not straddle sector boundaries. There may be unused space at the end of each sector, which is filled with zeros.

Each directory record represents a file or directory. Its format is as follows:

     length
     in bytes  contents
     --------  ---------------------------------------------------------
        1      R, the number of bytes in the record (which must be even)
        1      0 [number of sectors in extended attribute record]
        8      number of the first sector of file data or directory
                 (zero for an empty file), as a both endian double word
        8      number of bytes of file data or length of directory,
                 excluding the extended attribute record,
                 as a both endian double word
        1      number of years since 1900
        1      month, where 1=January, 2=February, etc.
        1      day of month, in the range from 1 to 31
        1      hour, in the range from 0 to 23
        1      minute, in the range from 0 to 59
        1      second, in the range from 0 to 59
                 (for DOS this is always an even number)
        1      offset from Greenwich Mean Time, in 15-minute intervals,
                 as a twos complement signed number, positive for time
                 zones east of Greenwich, and negative for time zones
                 west of Greenwich (DOS ignores this field)
        1      flags, with bits as follows:
                 bit     value
                 ------  ------------------------------------------
                 0 (LS)  0 for a norma1 file, 1 for a hidden file
                 1       0 for a file, 1 for a directory
                 2       0 [1 for an associated file]
                 3       0 [1 for record format specified]
                 4       0 [1 for permissions specified]
                 5       0
                 6       0
                 7 (MS)  0 [1 if not the final record for the file]
        1      0 [file unit size for an interleaved file]
        1      0 [interleave gap size for an interleaved file]
        4      1, as a both endian word [volume sequence number]
        1      N, the identifier length
        N      identifier
        P      padding byte: if N is even, P = 1 and this field contains
                 a zero; if N is odd, P = 0 and this field is omitted
    R-33-N-P   unspecified field for system use; must contain an even
                 number of bytes

The length of a directory includes the unused space, if any, at the ends of sectors. Hence it is always an exact multiple of 2048 (the sector size). Since every directory, even a nominally empty one, contains at least two records, the length of a directory is never zero.

All fields in the first record (sometimes called the "." record) refer to the directory itself, except that the identifier length is 1, and the identifier is zero. The root directory record in the Primary Volume Descriptor also has this format.

All fields in the second record (sometimes called the ".." record) refer to the parent directory, except that the identifier length is 1, and the identifier is 1. The second record in the root directory refers to the root directory.

The identifier for a subdirectory is its name. The identifier for a file consists of the following fields, in the order given:

    The name, consisting of the ASCII codes for at least one and not more than eight capital letters, digits and underscores.
    If there is an extension, the ASCII code for a period (46). If there is no extension, this field is omitted.
    The extension, consisting of the ASCII codes for not more than three capital letters, digits and underscores. If there is no extension, this field is omitted.
    The ASCII code for a semicolon (59).
    The ASCII code for 1 (49). [On other systems, this is the version number, consisting of the ASCII codes for a sequence of digits representing a number between 1 and 32767, inclusive.] 

Some implementations for DOS omit (4) and (5), and some use punctuation marks other than underscores in file names and extensions.

Directory records other than the first two are sorted as follows:

    Records are sorted by name, as described above.
    Every series of records with the same name is sorted by extension, as described above. For this purpose, a record without an extension is sorted as though its extension consisted of ASCII blanks (32).
    [On other systems, every series of records with the same name and extension is sorted in order of decreasing version number.]
    [On other systems, two records with the same name, extension and version number are permitted, if the first record is an associated file.] 

[ISO9660 permits names containing more than eight characters and extensions containing more than three characters, as long as both of them together contain no more than 30 characters.]

It is apparently permissible under ISO9660 to use two or more consecutive records to represent consecutive pieces of the same file. Bit 7 of the flags byte is set in every record except the last one. However, this technique seems pointless and is apparently not used. It is not supported by MSCDEX.
