Supported Compression Methods

As per .ZIP File Format specifications, the following compression methods are supported.

    Store - implies no compression
    Shrink
    Reduction (This implies compression factors ranging from level 1 to level 4)
    Implode
    Deflate
    Deflat64
    BZIP2
    LZMA (EFS)
    WavPack
    PPMd version I, Rev 1

DEFLATE is the commonly used compression method which is a lossless date compression algorithm that uses a combination of the LZ77 and Huffman coding and is detailed in RFC 1951.
https://tools.ietf.org/html/rfc1951


Zip file is structured in the following manner:
Local File Header 1
File Data 1
Data Descriptor 1
Local File Header 2
File Data 2
Data Descriptor 2
      ....
      ....
Local File Header N
File Data N
Data Descriptor N
Archive Decryption Header
Archive Extra Data Record
Central Directory



ZIP File Entries

    Local File Header
    Optional Extra Data Fields
    User data (optionally compressed/optionally encrypted)

Offset	Bytes	Description
0	4	Local file header signature = 0x04034b50 (read as a little-endian number)
4	2	Version needed to extract (minimum)
6	2	General purpose bit flag
8	2	Compression method
10	2	File last modification time
12	2	File last modification date
14	4	CRC-32
18	4	Compressed size
22	4	Uncompressed size
26	2	File name length (n)
28	2	Extra field length (m)
30	n	File Name
30+n	m	Extra Field

Central Directory File Header
Offset	Bytes	Description
0	4	Central directory file header signature = 0x02014b50
4	2	Version made by
6	2	Version needed to extract (minimum)
8	2	General purpose bit flag
10	2	Compression method
12	2	File last modification time
14	2	File last modification date
16	4	CRC-32
20	4	Compressed size
24	4	Uncompressed size
28	2	File name length (n)
30	2	Extra field length (m)
32	2	File comment length (k)
34	2	Disk number where file starts
36	2	Internal file attributes
38	4	External file attributes
42	4	Relative offset of local file header. This is the number of bytes between the start of the first disk on which the file occurs, and the start of the local file header. This allows software reading the central directory to locate the position of the file inside the ZIP file.
46	n	File name
46+n	m	Extra field
46+n+m	k	File comment

End of Central Directory Record
Offset	Bytes	Description
0	4	End of central directory signature = 0x06054b50
4	2	Number of this disk
6	2	Disk where central directory starts
8	2	Number of central directory records on this disk
10	2	Total number of central directory records
12	4	Size of central directory (bytes)
16	4	Offset of start of central directory, relative to start of archive
20	2	Comment length (n)
22	n	Comment


rm teste.zip
echo RSTU > teste1.txt
echo STUV > teste2.txt
zip -r teste.zip teste1.txt teste2.txt

hexdump -C -v teste.zip 
00000000  50 4b 03 04 0a 00 00 00  00 00 6a 37 72 51 99 0d  |PK........j7rQ..|
00000010  e5 11 05 00 00 00 05 00  00 00 0a 00 1c 00 74 65  |..............te|
00000020  73 74 65 31 2e 74 78 74  55 54 09 00 03 77 f0 b4  |ste1.txtUT...w..|
00000030  5f 5b f0 b4 5f 75 78 0b  00 01 04 e7 03 00 00 04  |_[.._ux.........|
00000040  e7 03 00 00 52 53 54 55  0a 50 4b 03 04 0a 00 00  |....RSTU.PK.....|
00000050  00 00 00 6a 37 72 51 64  25 bd 9b 05 00 00 00 05  |...j7rQd%.......|
00000060  00 00 00 0a 00 1c 00 74  65 73 74 65 32 2e 74 78  |.......teste2.tx|
00000070  74 55 54 09 00 03 77 f0  b4 5f 5b f0 b4 5f 75 78  |tUT...w.._[.._ux|
00000080  0b 00 01 04 e7 03 00 00  04 e7 03 00 00 53 54 55  |.............STU|
00000090  56 0a 50 4b 01 02 1e 03  0a 00 00 00 00 00 6a 37  |V.PK..........j7|
000000a0  72 51 99 0d e5 11 05 00  00 00 05 00 00 00 0a 00  |rQ..............|
000000b0  18 00 00 00 00 00 01 00  00 00 b4 81 00 00 00 00  |................|
000000c0  74 65 73 74 65 31 2e 74  78 74 55 54 05 00 03 77  |teste1.txtUT...w|
000000d0  f0 b4 5f 75 78 0b 00 01  04 e7 03 00 00 04 e7 03  |.._ux...........|
000000e0  00 00 50 4b 01 02 1e 03  0a 00 00 00 00 00 6a 37  |..PK..........j7|
000000f0  72 51 64 25 bd 9b 05 00  00 00 05 00 00 00 0a 00  |rQd%............|
00000100  18 00 00 00 00 00 01 00  00 00 b4 81 49 00 00 00  |............I...|
00000110  74 65 73 74 65 32 2e 74  78 74 55 54 05 00 03 77  |teste2.txtUT...w|
00000120  f0 b4 5f 75 78 0b 00 01  04 e7 03 00 00 04 e7 03  |.._ux...........|
00000130  00 00 50 4b 05 06 00 00  00 00 02 00 02 00 a0 00  |..PK............|
00000140  00 00 92 00 00 00 00 00                           |........|

Offset
0x0000   50 4b 03 04   ; Local file header signature = 0x04034b50 (read as a little-endian number)
0x0004   0a 00         ; Version needed to extract (minimum)
0x0006   00 00         ; General purpose bit flag
0x0008   00 00         ;Compression method
0x000A   2	File last modification time
0x000C   2	File last modification date
0x000E   4	CRC-32
0x0012   4	Compressed size
0x0016   4	Uncompressed size
0x001A   2	File name length (n)
0x001C   2	Extra field length (m)
0x001E   n	File Name
30+n	m	Extra Field


for N in {1..2048}; do echo -n T >> t2.txt; done
cp t2.txt t3.txt
zip -r t.zip t2.txt t3.txt

hexdump -C -v t.zip
00000020  2e 74 78 74 55 54 09 00  03 18 f1 b4 5f 2c f1 b4  |.txtUT......_,..|
00000030  5f 75 78 0b 00 01 04 e7  03 00 00 04 e7 03 00 00  |_ux.............|
00000040  0b 09 19 05 a3 60 14 8c  82 51 30 0a 46 c1 48 03  |.....`...Q0.F.H.|
00000050  00 50 4b 03 04 14 00 00  00 08 00 69 38 72 51 8d  |.PK........i8rQ.|
00000060  5a fe 68 11 00 00 00 00  08 00 00 06 00 1c 00 74  |Z.h............t|
00000070  33 2e 74 78 74 55 54 09  00 03 66 f1 b4 5f 66 f1  |3.txtUT...f.._f.|
00000080  b4 5f 75 78 0b 00 01 04  e7 03 00 00 04 e7 03 00  |._ux............|
00000090  00 0b 09 19 05 a3 60 14  8c 82 51 30 0a 46 c1 48  |......`...Q0.F.H|
000000a0  03 00 50 4b 01 02 1e 03  14 00 00 00 08 00 40 38  |..PK..........@8|
000000b0  72 51 8d 5a fe 68 11 00  00 00 00 08 00 00 06 00  |rQ.Z.h..........|
000000c0  18 00 00 00 00 00 01 00  00 00 b4 81 00 00 00 00  |................|
000000d0  74 32 2e 74 78 74 55 54  05 00 03 18 f1 b4 5f 75  |t2.txtUT......_u|
000000e0  78 0b 00 01 04 e7 03 00  00 04 e7 03 00 00 50 4b  |x.............PK|
000000f0  01 02 1e 03 14 00 00 00  08 00 69 38 72 51 8d 5a  |..........i8rQ.Z|
00000100  fe 68 11 00 00 00 00 08  00 00 06 00 18 00 00 00  |.h..............|
00000110  00 00 01 00 00 00 b4 81  51 00 00 00 74 33 2e 74  |........Q...t3.t|
00000120  78 74 55 54 05 00 03 66  f1 b4 5f 75 78 0b 00 01  |xtUT...f.._ux...|
00000130  04 e7 03 00 00 04 e7 03  00 00 50 4b 05 06 00 00  |..........PK....|
00000140  00 00 02 00 02 00 98 00  00 00 a2 00 00 00 00 00  |................|

