Node.js has a set of built-in modules which you can use without any further installation.

Here is a list of the built-in modules of Node.js version 6.10.3:
Module		Description
buffer		To handle binary data
crypto		To handle OpenSSL cryptographic functions
dns		To do DNS lookups and name resolution functions
events		To handle events
fs		To handle the file system
http		To make Node.js act as an HTTP server
https		To make Node.js act as an HTTPS server.
net		To create servers and clients
os		Provides information about the operation system
path		To handle file paths
querystring		To handle URL query strings
readline		To handle readable streams one line at the time
stream		To handle streaming data
string_decoder		To decode buffer objects into strings
timers		To execute a function after a given number of milliseconds
tls		To implement TLS and SSL protocols
tty		Provides classes used by a text terminal
url		To parse URL strings
util		To access utility functions
zlib		To compress or decompress files

mkdir myfirstmodule
cd myfirstmodule/

cat << 'EOF' > package.json
{
  "name": "myfirstmodule",
  "version": "1.0.0",
  "description": "module teste",
  "main": "app.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": ["module", "teste"],
  "author": "tarcisomesquita",
  "license": "CC-BY-4.0"
}
EOF

cat << 'EOF' > app.js
exports.myDateTime = function () {
  return Date();
}; 
EOF

cd ..

cat << 'EOF' > index.js
var http = require('http');
var dt = require('./myfirstmodule');

http.createServer(function (req, res) {
  res.writeHead(200, {'Content-Type': 'text/html'});
  res.write("The date and time are currently: " + dt.myDateTime());
  res.end();
}).listen(8080); 
EOF

node index.js
ou
cd ..; node t_app

firefox http://localhost:8080/
