
; input:  AX e BX possuem o SEGMENTO e OFFSET do código a ser desmontado.
; output: SI o offset da string com a instrução em include/instrucoes.asm
;         CX o número de bytes da instrução.

%ifndef _disassembler
   %define _disassembler

disassembler:
PUSHA

MOV   DS,AX
MOV   AX,WORD[BX]

BT    AX,0x07
JC    a1

; 1 bit conhecido = = = = = = = = = = = = = = = = = = = = =

a0:
POPA
MOV   CX, 0x01
MOV   SI, erro_a0
RET
erro_a0: db "erro_a0", 0x00

a00:

a000:

a0000:

a0000_0:

a0000_00:

a0000_000:

a0000_0000:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a1:
BT    AX,0x06
JC    a11

a10:
BT    AX,0x05
JC    a101

a100:
BT    AX,0x04
JC    a1001

a1000:
POPA
MOV   CX, 0x01
MOV   SI, erro_a1000
RET
erro_a1000: db "erro_a1000", 0x00

a1000_0:
a1000_00:
a1000_000:
a1000_0000:

; 2 bit conhecido = = = = = = = = = = = = = = = = = = = = =

a01:
a010:
a0100:
a0100_0:
a0100_00:
a0100_000:
a0100_0000:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a11:
POPA
MOV   CX, 0x01
MOV   SI, erro_a11
RET
erro_a11: db "erro_a11", 0x00

a110:

a1100:

a1100_:

a1100_0:

a1100_00:

a1100_000:

a1100_0000:

; 3 bit conhecido = = = = = = = = = = = = = = = = = = = = =

a001:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a011:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a101:
BT    AX,0x04
JC    a1011

a1010:
POPA
MOV   CX, 0x01
MOV   SI, erro_a1010
RET
erro_a1010: db "erro_a1010", 0x00

a1010_0:

a1010_00:

a1010_000:

a1010_0000:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a111:

; 4 bit conhecido = = = = = = = = = = = = = = = = = = = = =

a0001:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a0011:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a0101:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a0111:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a1001:
BT    AX,0x03
JC    a1001_1

a1001_0:
BT    AX,0x02
JC    a1001_01

a1001_00:
BT    AX,0x01
JC    a1001_001

a1001_000:
BT    AX,0x00
JC    a1001_0001

a1001_0000:
POPA
MOV   CX, 0x01
MOV   SI, o1001_0000
RET

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a1011:
BT    AX,0x03
JC    a1011_1

a1011_0:
POPA
MOV   CX, 0x01
MOV   SI, erro_a1011_0
RET
erro_a1011_0: db "erro_a1011_0", 0x00

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a1101:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a1111:

; 5 bit conhecido = = = = = = = = = = = = = = = = = = = = =

a0000_1:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a0001_1:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a0010_1:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a0011_1:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a0100_1:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a0101_1:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a0110_1:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a0111_1:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a1000_1:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a1001_1:
POPA
MOV   CX, 0x01
MOV   SI, erro_a1001_1
RET
erro_a1001_1: db "erro_a1001_1", 0x00

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a1010_1:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a1011_1:
BT    AX,0x02
JC    a1011_11

a1011_10:
BT    AX,0x01
JC    a1011_101

a1011_100:
POPA
MOV   CX, 0x01
MOV   SI, erro_a1011_100
RET
erro_a1011_100: db "erro_a1011_100", 0x00

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a1100_1:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a1101_1:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a1110_1:

; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

a1111_1:

; 6 bit conhecido = = = = = = = = = = = = = = = = = = = = =

a0000_01:
a0000_11:
a0001_01:
a0001_11:
a0010_01:
a0010_11:
a0011_01:
a0011_11:
a0100_01:
a0100_11:
a0101_01:
a0101_11:
a0110_01:
a0110_11:
a0111_01:
a0111_11:
a1000_01:
a1000_11:

a1001_01:
POPA
MOV   CX, 0x01
MOV   SI, erro_a1001_01
RET
erro_a1001_01: db "erro_a1001_01", 0x00

a1001_11:
a1010_01:
a1010_11:
a1011_01:
a1011_11:
POPA
MOV   CX, 0x01
MOV   SI, erro_a1011_11
RET
erro_a1011_11: db "erro_a1011_11", 0x00

a1100_01:
a1100_11:
a1101_01:
a1101_11:
a1110_01:
a1110_11:
a1111_01:
a1111_11:

; 7 bit conhecido = = = = = = = = = = = = = = = = = = = = =

a0000_001:
a0000_011:
a0000_101:
a0000_111:
a0001_001:
a0001_011:
a0001_101:
a0001_111:
a0010_001:
a0010_011:
a0010_101:
a0010_111:
a0011_001:
a0011_011:
a0011_101:
a0011_111:
a0100_001:
a0100_011:
a0100_101:
a0100_111:
a0101_001:
a0101_011:
a0101_101:
a0101_111:
a0110_001:
a0110_011:
a0110_101:
a0110_111:
a0111_001:
a0111_011:
a0111_101:
a0111_111:
a1000_001:
a1000_011:
a1000_101:
a1000_111:

a1001_001:
POPA
MOV   CX, 0x01
MOV   SI, erro_a1001_001
RET
erro_a1001_001: db "erro_a1001_001", 0x00

a1001_011:
a1001_101:
a1001_111:
a1010_001:
a1010_011:
a1010_101:
a1010_111:
a1011_001:
a1011_011:
a1011_101:
BT    AX,0x00
JC    a1011_1011

a1011_1010:
POPA
MOV   CX, 0x01
MOV   SI, erro_a1011_1010
RET
erro_a1011_1010: db "erro_a1011_1010", 0x00

a1011_111:
a1100_001:
a1100_011:
a1100_101:
a1100_111:
a1101_001:
a1101_011:
a1101_101:
a1101_111:
a1110_001:
a1110_011:
a1110_101:
a1110_111:
a1111_001:
a1111_011:
a1111_101:
a1111_111:

; 8 bit conhecido = = = = = = = = = = = = = = = = = = = = =

a1001_0001:
POPA
MOV   CX, 0x01
MOV   SI, erro_a1001_0001
RET
erro_a1001_0001: db "erro_a1001_0001", 0x00

a1011_1011:
POPA
MOV   CX, 0x01
MOV   SI, erro_a1011_1011
RET
erro_a1011_1011: db "erro_a1011_1011", 0x00

%include "include/006_disassembler_instrucoes.asm"
%endif

