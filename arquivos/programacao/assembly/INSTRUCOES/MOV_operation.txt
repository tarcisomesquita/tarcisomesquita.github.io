
Loading a segment register while in protected mode results in special checks and actions, as described in the following listing. These checks are performed on the segment selector and the segment descriptor to which it points.

IF SS is loaded
   THEN
   IF segment selector is NULL
      THEN
      #GP(0);
   FI;
   
   IF segment selector index is outside descriptor table limits
                             or segment selector's RPL ≠ CPL
                             or segment is not a writable data segment
                             or DPL ≠ CPL
      THEN
      #GP(selector);
   FI;
   
   IF segment not marked present
      THEN
      #SS(selector);
   ELSE
      SS ←segment selector;
      SS ←segment descriptor; 
   FI;

FI;

IF DS, ES, FS, or GS is loaded with non-NULL selector
   THEN
   IF segment selector index is outside descriptor table limits
                             or segment is not a data 
                             or readable code segment
                             or ((segment is a data 
                              or nonconforming code segment)
                             and (both RPL and CPL > DPL))
      THEN
      #GP(selector);
   FI;
   
   IF segment not marked present
      THEN
      #NP(selector);
   ELSE
      SegmentRegister ←segment selector;
      SegmentRegister ←segment descriptor;
   FI;
FI;

IF DS, ES, FS, or GS is loaded with NULL selector
   THEN
   SegmentRegister ←segment selector;
   SegmentRegister ←segment descriptor;
FI;

