STOS/STOSB/STOSW/STOSD/STOSQ — Store String

  Opcode          Instruction  64-Bit     Compat/   Description
                               Mode       Leg Mode
  AA              STOS m8      Valid      Valid     For legacy mode, store AL at address ES:(E)DI; For 64-bit mode store AL at address RDI or EDI.
  AB              STOS m16     Valid      Valid     For legacy mode, store AX at address ES:(E)DI; For 64-bit mode store AX at address RDI or EDI.
  AB              STOS m32     Valid      Valid     For legacy mode, store EAX at address ES:(E)DI; For 64-bit mode store EAX at address RDI or EDI.
  REX.W + AB      STOS m64     Valid      N.E.      Store RAX at address RDI or EDI.
  AA              STOSB        Valid      Valid     For legacy mode, store AL at address ES:(E)DI; For 64-bit mode store AL at address RDI or EDI.
  AB              STOSW        Valid      Valid     For legacy mode, store AX at address ES:(E)DI; For 64-bit mode store AX at address RDI or EDI.
  AB              STOSD        Valid      Valid     For legacy mode, store EAX at address ES:(E)DI; For 64-bit mode store EAX at address RDI or EDI.
  REX.W + AB      STOSQ        Valid      N.E.      Store RAX at address RDI or EDI.

Description
In non-64-bit and default 64-bit mode; stores a byte, word, or doubleword from the AL, AX, or EAX register (respectively) into the destination operand.
The destination operand is a memory location, the address of which is read from either the ES:EDI or ES:DI register (depending on the address-size attribute of the instruction and the mode of operation). The ES segment cannot be overridden with a segment override prefix.

After the byte, word, or doubleword is transferred from the register to the memory location, the (E)DI register is incremented or decremented according to the setting of the DF flag in the EFLAGS register. If the DF flag is 0, the register is incremented; if the DF flag is 1, the register is decremented (the register is incremented or decremented by 1 for byte operations, by 2 for word operations, by 4 for doubleword operations).

In 64-bit mode, the default address size is 64 bits, 32-bit address size is supported using the prefix 67H. Using a REX prefix in the form of REX.W promotes operation on doubleword operand to 64 bits. The promoted no-operand mnemonic is STOSQ.
STOSQ (and its explicit operands variant) store a quadword from the RAX register into the destination addressed by RDI or EDI.

The STOS, STOSB, STOSW, STOSD, STOSQ instructions can be preceded by the REP prefix for block loads of ECX bytes, words, or doublewords.
More often, however, these instructions are used within a LOOP construct because data needs to be moved into the AL, AX, or EAX register before it can be stored.

Operation

Non-64-bit Mode:
IF (Byte store)
    THEN
         DEST ←AL;
             THEN IF DF = 0
                  THEN (E)DI ←(E)DI +1;
                  ELSE (E)DI ←(E)DI – 1;
             FI;
    ELSE IF (Word store)
         THEN
             DEST ←AX;
                  THEN IF DF = 0
                      THEN (E)DI ←(E)DI +2;
                      ELSE (E)DI ←(E)DI – 2;
                   FI;
          FI;
     ELSE IF (Doubleword store)
          THEN
               DEST ←EAX;
                   THEN IF DF = 0
                        THEN (E)DI ←(E)DI +4;
                        ELSE (E)DI ←(E)DI – 4;
                   FI;
          FI;
 FI;


64-bit Mode:

 IF (Byte store)
     THEN
          DEST ←AL;
               THEN IF DF = 0
                   THEN (R|E)DI ←(R|E)DI +1;
                   ELSE (R|E)DI ←(R|E)DI – 1;
               FI;
     ELSE IF (Word store)
          THEN
               DEST ←AX;
                   THEN IF DF = 0
                        THEN (R|E)DI ←(R|E)DI +2;
                        ELSE (R|E)DI ←(R|E)DI – 2;
                   FI;
          FI;
     ELSE IF (Doubleword store)
          THEN
               DEST ←EAX;
                   THEN IF DF = 0
                        THEN (R|E)DI ←(R|E)DI +4;
                        ELSE (R|E)DI ←(R|E)DI – 4;
                   FI;
          FI;
     ELSE IF (Quadword store using REX.W )
          THEN
               DEST ←RAX;
                   THEN IF DF = 0
                        THEN (R|E)DI ←(R|E)DI +8;
                        ELSE (R|E)DI ←(R|E)DI – 8;
                   FI;
       FI;
FI;


Flags Affected
None.


Protected Mode Exceptions
#GP(0)              If the destination is located in a non-writable segment.
                    If a memory operand effective address is outside the limit of the
                    ES segment.
                    If the ES register contains a NULL segment selector.
#PF(fault-code)     If a page fault occurs.
#AC(0)              If alignment checking is enabled and an unaligned memory
                    reference is made while the current privilege level is 3.
#UD                 If the LOCK prefix is used.
Real-Address Mode Exceptions
#GP                 If a memory operand effective address is outside the ES
                    segment limit.
#UD                 If the LOCK prefix is used.
Virtual-8086 Mode Exceptions
#GP(0)              If a memory operand effective address is outside the ES
                    segment limit.
#PF(fault-code)     If a page fault occurs.
#AC(0)              If alignment checking is enabled and an unaligned memory
                    reference is made.
#UD                 If the LOCK prefix is used.

Compatibility Mode Exceptions
Same exceptions as in protected mode.

64-Bit Mode Exceptions
#GP(0)              If the memory address is in a non-canonical form.
#PF(fault-code)     If a page fault occurs.
#AC(0)              If alignment checking is enabled and an unaligned memory
                    reference is made while the current privilege level is 3.
#UD                 If the LOCK prefix is used.

