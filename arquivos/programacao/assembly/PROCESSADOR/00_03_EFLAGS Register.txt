
The state of the EFLAGS register is 00000002H after reset.

The following instructions can be used to move groups of flags to and from the procedure stack or the EAX register: LAHF, SAHF, PUSHF, PUSHFD, POPF, and POPFD.
After the contents of the EFLAGS register have been transferred to the procedure stack or EAX register, the flags can be examined and modified using the processor’s bit manipulation instructions (BT, BTS, BTR, and BTC).

When suspending a task (using the processor’s multitasking facilities), the processor
automatically saves the state of the EFLAGS register in the task state segment (TSS)
for the task being suspended.

When a call is made to an interrupt or exception handler procedure, the processor
automatically saves the state of the EFLAGS registers on the procedure stack. When
an interrupt or exception is handled with a task switch, the state of the EFLAGS
register is saved in the TSS for the task being suspended.

The status flags (bits 0, 2, 4, 6, 7, and 11) of the EFLAGS register indicate the results
of arithmetic instructions, such as the ADD, SUB, MUL, and DIV instructions.

The system flags and IOPL field in the EFLAGS register control operating-system or
executive operations. They should not be modified by application programs.


bit nº 0
Carry Flag (CF)
Status
Can be modified directly, using the STC, CLC, and CMC instructions.
Contains the left-most bit after calculations
Carry (vai um) no fim do reg. ? 0 – não 1 – sim
Set if an arithmetic operation generates a carry or a borrow out of the 
most-significant bit of the result; cleared otherwise.
This flag indicates an overflow condition for unsigned-integer arithmetic.
It is also used in multiple-precision arithmetic.
When performing multiple-precision arithmetic on integers, the CF flag is used in
conjunction with the add with carry (ADC) and subtract with borrow (SBB) instruc-
tions to propagate a carry or borrow from one computation to the next.

bit nº 1
1
Reservado

bit nº 2
Parity Flag (PF)
Status
indicates even or odd parity
0 – ímpar, 1 – par
Set if the least-significant byte of the result 
contains an even number of 1 bits; cleared otherwise.
Exemplo:
AX=0103h
XOR AX,0x0000 seta PF

AX=0101h
XOR AX,0x0000 limpa PF


bit nº 3
0
Reservado

bit nº 4
Adjust flag (AF)
Status
Set if an arithmetic operation generates a carry or a borrow out of bit 3 of the result; cleared otherwise.
This flag is used in binary-coded decimal (BCD) arithmetic.
Seta AF:
AX=0008
ADD  AX,0x0008
AX=0010
SUB  AX,0x0008

Limpa AF os demais:
AX=0004
ADD  AX,0x0004
AX=0080
ADD  AX,0x0080
AX=0800
ADD  AX,0x0800


bit nº 5
0
Reservado

bit nº 6
Zero Flag (ZF)
Status
0 – não zero, 1 – zero
Set if the result is zero; cleared otherwise.

bit nº 7
Sign Flag (SF)
Status
Set equal to the most-significant bit of the result, which is the sign bit of a signed integer.
(0 indicates a positive value and 1 indicates a negative value.)

bit nº 8
Trap Flag (TF)
System
Set to enable single-step mode for debugging;
clear to disable single-step mode.

bit nº 9
Interrupt Flag (IF)
System
Controls the response of the processor to maskable interrupt requests.
Set to respond to maskable interrupts; cleared to inhibit maskable interrupts.

bit nº 10
Direction Flag (DF)
Control
used for string operations to check direction
0 – normal, 1 – reverso
Controls string instructions (MOVS, CMPS, SCAS, LODS, and STOS).
Setting the DF flag causes the string instructions to auto-decrement
(to process strings from high addresses to low addresses).
Clearing the DF flag causes the string instructions to auto-increment
(process strings from low addresses to high addresses).
The STD and CLD instructions set and clear the DF flag, respectively.

bit nº 11
Overflow Flag (OF)
Status
indicates an overflow when set
Set if the integer result is too large a positive
number or too small a negative number (excluding the sign-bit)
to fit in the destination operand; cleared otherwise. This flag
indicates an overflow condition for signed-integer (two’s
complement) arithmetic.

bit nº 12 e 13
I/O Privilege Level (IOPL)
System
                               Indicates the I/O privilege level of
the currently running program or task. The current privilege
level (CPL) of the currently running program or task must be
less than or equal to the I/O privilege level to access the I/O
address space. This field can only be modified by the POPF and
IRET instructions when operating at a CPL of 0.

bit nº 14
Nested Task (NT)
System
                     Controls the chaining of interrupted and
called tasks. Set when the current task is linked to the previ-
ously executed task; cleared when the current task is not linked
to another task.

bit nº 15
0
Reservado

bit nº 16
Resume Flag (RF)
System
            Controls the processor’s response to debug
exceptions.

bit nº 17
Virtual-8086 Mode (VM)
System
                              Set to enable virtual-8086 mode;
clear to return to protected mode without virtual-8086 mode
semantics.

bit nº 18
Alignment Check (AC)
System
                           Set this flag and the AM bit in the CR0
register to enable alignment checking of memory references;
clear the AC flag and/or the AM bit to disable alignment
checking.

bit nº 19
Virtual Interrupt Flag (VIF)
System
Virtual image of the IF flag. Used in conjunction with the VIP flag.
(To use this flag and the VIP flag the virtual mode extensions are enabled by setting the VME flag in control register CR4.)

bit nº 20
Virtual Interrupt Pending (VIP)
System
Set to indicate that an interrupt is pending; clear when no interrupt is pending.
(Software sets and clears this flag; the processor only reads it.)
Used in conjunction with the VIF flag.

bit nº 21
ID Flag (ID)
System
The ability of a program to set or clear this flag indicates support for the CPUID instruction.

bit nº 22
0
Reservado

bit nº 23
0
Reservado

bit nº 24
0
Reservado

bit nº 25
0
Reservado

bit nº 26
0
Reservado

bit nº 27
0
Reservado

bit nº 28
0
Reservado

bit nº 29
0
Reservado

bit nº 30
0
Reservado

bit nº 31
0
Reservado

In 64-bit mode, EFLAGS is extended to 64 bits and called RFLAGS.
The upper 32 bits of RFLAGS register is reserved. The lower 32 bits of RFLAGS is the same as EFLAGS.


11 10 0F 0E 0D 0C 0B 0A 09 08 07 06 05 04 03 02 01 00
 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |--- CF Carry Flag
 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |------ 1
 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |--------- PF Flag de Paridade
 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |------------ 0
 |  |  |  |  |  |  |  |  |  |  |  |  |  |--------------- AF Flag Auxiliar
 |  |  |  |  |  |  |  |  |  |  |  |  |------------------ 0
 |  |  |  |  |  |  |  |  |  |  |  |--------------------- ZF Flag Zero
 |  |  |  |  |  |  |  |  |  |  |------------------------ SF Flag de Sinal
 |  |  |  |  |  |  |  |  |  |--------------------------- TF Trap Flag (Single Step)
 |  |  |  |  |  |  |  |  |------------------------------ IF Flag de Interrupção
 |  |  |  |  |  |  |  |--------------------------------- DF Flag de Direção
 |  |  |  |  |  |  |------------------------------------ OF Flag de Overflow
 |  |  |  |  |  |---------------------------------------
 |  |  |  |  |------------------------------------------ IOPL Nível de Privilégio I/O (286+)
 |  |  |  |--------------------------------------------- NT Nested Task Flag (286+)
 |  |  |------------------------------------------------ 0
 |  |--------------------------------------------------- RF Resume Flag (386+)
 |------------------------------------------------------ VM - Flag de Modo Virtual (386+)

