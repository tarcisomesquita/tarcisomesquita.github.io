Methods form the object's interface with the outside world; the buttons on the front of your television set, for example, are the interface between you and the electrical wiring on the other side of its plastic casing.

an interface is a group of related methods with empty bodies.

interface figura {
   public void desenha();
   public void apaga();
   public void move (int x1, int y1);
}

If your class claims to implement an interface, all methods defined by that interface must appear in its source code.

Uma classe pode implementar várias interface mas apenas herda (extends) de uma única classe.
O mecanismo de interface é a forma de implementar herança múltipla em Java.

Exemplo
class quadrado implements figura {
   int l;          // lado do quadrado
   int x ;         // centro da fig. x
   int y ;         // centro da fig. y
   
   public quadrado(int x1, int y1, int l1) {
        x = x1; y=y1; l = l1;
   }
   
   public void desenha() {
      System.out.println("Desenhando quadrado (" + x + "," + y + ") lado "+ l );
   }
   
   public void apaga() {
      System.out.println("Apagando quadrado (" + x + "," + y + ") lado " + l );
   }
   
   public void move (int x1, int y1) {
      this.apaga();
      x = x1;
      y = y1;
      this.desenha();
  }
}

Se uma classe é definida por apenas métodos abstratos então é melhor não usar a palavra-chave abstract.
Para estes caso o Java fornece uma técnica chamada de interfaces que pode ser usada para definir um modelo de comportamento.

As interfaces diferem dos métodos abstratos no fato de que nenhum método de interface pode ter um corpo.
As interfaces não podem ser instanciadas.

