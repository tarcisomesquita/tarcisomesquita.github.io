A classe Object é a classe básica de todas as classes do Java, é a superclasse de todas as classes.
Every class you use or write inherits the instance methods of Object. 

Métodos interessantes : toString( ), getClass( ), getSuperClass(), getName( ) entre outros

protected Object clone() throws CloneNotSupportedException
Creates and returns a copy of this object.

public boolean equals(Object obj)
Indicates whether some other object is "equal to" this one.

protected void finalize() throws Throwable
Called by the garbage collector on an object when garbage collection determines that there are no more references to the object

public final Class getClass()
Returns the runtime class of an object.

public int hashCode()
Returns a hash code value for the object.
hash code is the object's memory address in hexadecimal.
if two objects are equal, their hash code must also be equal.

public String toString()
Returns a string representation of the object.


// clear ; javac teste.java && java teste Isso é um teste

import java.io.*;
import java.lang.*;

public class teste {
   public static void main(String argv[]) {
      String arg[] = argv.clone();
      System.out.println("arg[0], clone de argv[0] = " + arg[0]);
      
      if (argv.equals(arg)) System.out.println("o objeto argv é igual a arg");
      else  System.out.println("o objeto argv NÃO é igual a arg");
      
      //arg.finalize();
      
      System.out.println("getClass = " + argv.getClass().getSimpleName());
      System.out.println("getClass.getSuperclass() = " + argv.getClass().getSuperclass());
      System.out.println("getClass.getInterfaces() = " + argv.getClass().getInterfaces());
      
      System.out.println("hashCode() = " + argv.hashCode());
      
      System.out.println("toString() = " + argv.toString());
   }
}

public class Book {
}

Book firstBook  = new Book("0201914670");
Book secondBook = new Book("0201914670");
if (firstBook.equals(secondBook)) System.out.println("objects are equal");
else System.out.println("objects are not equal");


    * public final void notify()
    * public final void notifyAll()
    * public final void wait()
    * public final void wait(long timeout)
    * public final void wait(long timeout, int nanos)



http://docs.oracle.com/javase/8/docs/api/java/lang/Class.html
The Class class, in the java.lang package, has a large number of methods (more than 50). For example, you can test to see if the class is an annotation (isAnnotation()), an interface (isInterface()), or an enumeration (isEnum()). You can see what the object's fields are (getFields()) or what its methods are (getMethods()), and so on.

