// FileRead.java
import java.io.*;
import java.awt.*;
import java.awt.event.*;
public class FileRead extends Frame implements ActionListener {
private TextField tfFileName;

182

Introdução ao Java

private TextArea taOutput;
public static void main(String args[]) {
FileRead f = new FileRead();
f.show();
}
public FileRead() {
super("File Read");
setSize(320, 320);
Panel p = new Panel();
p.setBackground(SystemColor.control);
p.add(new Label("Arquivo"));
p.add(tfFileName = new TextField(30));
tfFileName.addActionListener(this);
add("North", p);
add("Center", taOutput = new TextArea());
taOutput.setEditable(false);
addWindowListener(new CloseWindowAndExit());
}
public void actionPerformed(ActionEvent evt) {
try {
BufferedReader in = new BufferedReader(
new FileReader(tfFileName.getText()));
taOutput.setText("");
String line;
String buffer = new String();
while((line = in.readLine()) != null)
buffer += line + "\n";
in.close();
taOutput.append(buffer);
} catch (IOException exc) {
taOutput.setText("IOException:\n"+exc.toString());
}
}
}







// JCopy.java
import java.io.*;
public class JCopy {
public static final void main(String args[]) {
if (args.length==2)
copyFile(args[0], args[1]);
else {
System.out.println("Uso:");
System.out.println(" JCopy arqOrigem arqDestino");
}
}
public static void copyFile(String source, String target) {
// utilize o método exemplificado anteriormente
M
}
}












import java.io.*;
public static void copyFile(String source, String target) {
try {
// cria objeto stream para entrada

185

Prof. Peter Jandl Jr.

BufferedInputStream src = new BufferedInputStream(
new FileInputStream(source));
// cria objeto stream para saida
BufferedOutputStream tgt = new BufferedOutputStream(
new FileOutputStream(target));
// verifica disponibilidade de dados na entrada
while (src.available()>0) {
// cria array para conter todos os dados disponiveis
byte [] data = new byte[src.available()];
// le todos os dados disponiveis
src.read(data, 0, src.available());
// grava todos os dados disponiveis
tgt.write(data, 0, data.length);
}
// garante que dados serao gravados
tgt.flush();
// fecha streams de entrada e saida
tgt.close();
src.close();
} catch (Exception e) {
// em caso de erro exibe mensagens abaixo
System.out.println("Copia não foi possivel:\n");
System.out.println("de > "+source);
System.out.println("para> "+target);
e.printStackTrace();
}
}
















try {
// constroi objeto stream para leitura de arquivo
DataInputStream in = new DataInputStream (
new BufferedInputStream (
new InputStream("NomeArquivo.ext")));
// string auxiliar para linha lida
String linha;
// string para armazenar todo texto lido
String buffer = new String();
// le primeira linha

180

Introdução ao Java

linha = in.readLine();
// enquanto leitura não nula
while (linha != null) {
// adiciona linha ao buffer
buffer += linha + "\n";
// le proxima linha
linha = in.readLine();
}
in.close(); // fecha stream de leitura
} catch (IOException exc) {
System.out.println("Erro de IO");
exc.printStackTrace();
}








