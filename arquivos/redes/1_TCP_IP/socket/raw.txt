NAME
       raw - Linux IPv4 raw sockets

SYNOPSIS
       #include <sys/socket.h>
       #include <netinet/in.h>
       raw_socket = socket(AF_INET, SOCK_RAW, int protocol);

DESCRIPTION
A raw socket receives or sends the raw datagram not including link level headers.

       The IPv4 layer generates an IP header when sending a packet unless the IP_HDRINCL socket option is enabled on the socket.  When it is enabled, the packet must contain an IP header.  For receiving, the IP header is always included in the packet.

Receiving of all IP protocols via IPPROTO_RAW is not possible using raw sockets.

              ┌───────────────────────────────────────────────────┐
              │IP Header fields modified on sending by IP_HDRINCL │
              ├──────────────────────┬────────────────────────────┤
              │IP Checksum           │ Always filled in           │
              ├──────────────────────┼────────────────────────────┤
              │Source Address        │ Filled in when zero        │
              ├──────────────────────┼────────────────────────────┤
              │Packet ID             │ Filled in when zero        │
              ├──────────────────────┼────────────────────────────┤
              │Total Length          │ Always filled in           │
              └──────────────────────┴────────────────────────────┘

       If IP_HDRINCL is specified and the IP header has a nonzero destination address, then the destination address of the socket is used to route the packet.  When MSG_DONTROUTE is specified, the destination address should refer to a local interface, otherwise a routing table lookup is done anyway but gatewayed routes are ignored.

       If IP_HDRINCL isn't set, then IP header options can be set on raw sockets with setsockopt(2); see ip(7) for more information.

       Starting with Linux 2.2, all IP header fields and options can be set using IP socket options.  This means raw sockets are usually needed only for new protocols or protocols with no user interface (like ICMP).

       When a packet is received, it is passed to any raw sockets which have been bound to its protocol before it is passed to other protocol handlers (e.g., kernel protocol modules).

   Address format
       For sending and receiving datagrams (sendto(2), recvfrom(2), and similar), raw sockets use the standard sockaddr_in address structure defined in ip(7).  The sin_port field could be used to specify the IP protocol number, but it is ignored for sending in Linux 2.2 and later, and should be always set to 0 (see BUGS).  For incoming packets, sin_port is set to zero.

   Socket options
       Raw socket options can be set with setsockopt(2) and read with getsockopt(2) by passing the IPPROTO_RAW family flag.

       ICMP_FILTER
              Enable a special filter for raw sockets bound to the IPPROTO_ICMP protocol.  The value has a bit set for each ICMP message type which should be filtered out.  The default is to filter no ICMP messages.

       In addition, all ip(7) IPPROTO_IP socket options valid for datagram sockets are supported.

   Error handling
       Errors originating from the network are passed to the user only when the socket is connected or the IP_RECVERR flag is enabled.  For connected sockets, only EMSGSIZE and EPROTO are passed for compatibility.  With IP_RECVERR, all network errors are saved in the error queue.

ERRORS
       EACCES User tried to send to a broadcast address without having the broadcast flag set on the socket.

       EFAULT An invalid memory address was supplied.

       EINVAL Invalid argument.

       EMSGSIZE
              Packet too big.  Either Path MTU Discovery is enabled (the IP_MTU_DISCOVER socket flag) or the packet size exceeds the maximum allowed IPv4 packet size of 64KB.

       EOPNOTSUPP
              Invalid flag has been passed to a socket call (like MSG_OOB).

       EPERM  The user doesn't have permission to open raw sockets.  Only processes with an effective user ID of 0 or the CAP_NET_RAW attribute may do that.

       EPROTO An ICMP error has arrived reporting a parameter problem.


NOTES
       A raw socket can be bound to a specific local address using the bind(2) call.  If it isn't bound, all packets with the specified IP protocol are received.  In addition, a raw socket can be bound to a specific network device using SO_BINDTODEVICE; see socket(7).

       An IPPROTO_RAW socket is send only.  If you really want to receive all IP packets, use a packet(7) socket with the ETH_P_IP protocol.  Note that packet sockets don't reassemble IP fragments, unlike raw sockets.

       If you want to receive all ICMP packets for a datagram socket, it is often better to use IP_RECVERR on that particular socket; see ip(7).

