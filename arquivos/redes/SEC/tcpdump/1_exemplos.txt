
# tcpdump [ opções ] [ expressão ]

expressão: proto direction type

protos: ether, icmp, ip, ip6, arp, rarp, tcp and udp.
E.g., 'ether src foo',  'arp net 128.3', 'tcp port 21', 'udp portrange 7000-7009'.

directions: src, dst, src or dst, src and dst.
E.g., 'src foo', 'dst  net  128.3', 'src  or  dst  port ftp-data'.
Default is src or dst.

types: host, net, port, portrange.
E.g., 'host foo', 'net 128.3', 'port 20', 'portrange 6000-6008'.


As expressões de uma sequência são conectadas por peradores lógicos: and, or, not.


# tcpdump -n -i eth0 'src net 192.168.0.0/24 and dst host 192.168.0.1 and dst port 80'

# tcpdump -ennqti eth0 \( arp or icmp \)

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

tcpdump -xx -n -e -r 2016-09-30_06-32.pcap 'ether[12:2]==0x888e'

expr relop expr
relop: >, <, >=, <=, ==, !=
expr is an arithmetic expression composed of integer constants, the normal binary operators [+, -, *, /,  &,  |, <<,  >>], a length operator,  and special packet data.
All comparisons  are  unsigned. Example, 0x80000000 and 0xffffffff are > 0.
To access data inside the packet, use the following syntax: proto [ expr : size ]

No cabeçalho tcp os FLAGS estão no byte 13. O flag SYN é o bit número 1, que dá 2 em decimal.
Para o tcpdump capturar somente os pacotes SYN:
# tcpdump -i eth0 -n tcp[13] == 2

Todos os pacotes com a flag SYN ativada independente do estado das outras flags, faça um AND com o valor binário referente a flag SYN.
"tcp[13] & 2 == 2"

       available: tcp-fin, tcp-syn, tcp-rst, tcp-push, tcp-act, tcp-urg.
       To print the start and end packets (the SYN and FIN  packets)
              tcpdump 'tcp[tcpflags] & (tcp-syn|tcp-fin) != 0'

       To print IP packets longer than 576 bytes sent through gateway snup:
              tcpdump 'gateway snup and ip[2:2] > 576'

       To  print IP broadcast or multicast packets that were not sent via Ethernet broadcast or multicast:
              tcpdump 'ether[0] & 1 = 0 and ip[16] >= 224'

       To print all ICMP packets that are not echo requests/replies (i.e., not ping packets):
              tcpdump 'icmp[icmptype] != icmp-echo and icmp[icmptype] != icmp-echoreply'

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

       Name server requests are formatted as
              src > dst: id op? flags qtype qclass name (len)
              h2opolo.1538 > helios.domain: 3+ A? ucbvax.berkeley.edu. (37)
       (qtype=A)  associated  with the name ucbvax.berkeley.edu.
  The query id was '3'.  The '+' indicates the recursion desired flag  was  set.

       Name server responses are formatted as
              src > dst:  id op rcode flags a/n/au type class data (len)
              helios.domain > h2opolo.1538: 3 3/3/7 A 128.32.137.3 (273)
              helios.domain > h2opolo.1537: 2 NXDomain* 0/1/0 (97)
       In the first example, helios responds to query id 3 from h2opolo with 3
       answer  records,  3  name server records and 7 additional records.  The
       first answer record is type  A  (address)  and  its  data  is  internet
       address  128.32.137.3.   The  total size of the response was 273 bytes,
       excluding UDP and IP headers.

The '*' indicates that the authoritative answer
       bit was set.

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

For 802.11 headers:
BSSID: 
DA: destination address
SA: source address
RA: 
TA: 

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

less length
       True  if  the  packet  has a length less than or equal to
       length.  This is equivalent to:
            len <= length.

greater length
       True if the packet has a length greater than or equal  to
       length.  This is equivalent to:
            len >= length.


ether broadcast
       True if the packet is an Ethernet broadcast packet.   The ether keyword is optional.

ip broadcast
       True  if  the  packet  is  an  IPv4 broadcast packet.  It
       checks for both the  all-zeroes  and  all-ones  broadcast
       conventions,  and  looks up the subnet mask on the inter-
       face on which the capture is being done.

ether multicast
       True  if the packet is an Ethernet multicast packet.  The
       ether  keyword  is  optional.   This  is  shorthand   for
       'ether[0] & 1 != 0'.

ip multicast
       True if the packet is an IPv4 multicast packet.

ip6 multicast
       True if the packet is an IPv6 multicast packet.


pppoed True if  the  packet  is  a  PPP-over-Ethernet  Discovery
       packet (Ethernet type 0x8863).

pppoes True  if the packet is a PPP-over-Ethernet Session packet
       (Ethernet type 0x8864).  Note that the first pppoes  key-
       word  encountered in expression changes the decoding off-
       sets for the remainder of expression  on  the  assumption
       that the packet is a PPPoE session packet.

       For example:
            pppoes && ip
       filters IPv4 protocols encapsulated in PPPoE.

