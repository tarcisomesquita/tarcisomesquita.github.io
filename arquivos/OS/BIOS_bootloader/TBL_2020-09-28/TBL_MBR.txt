# cat TBL_MBR.txt | sed 's/^\([^#]*\)#.*/\1/; s/ \+$//; /^$/d; s/ /\\\\x/g; s/^/\/bin\/echo -n -e /' | sh > TBL_MBR.bin
# ./ndisasm -b 16 -o $((0x7C00)) TBL_MBR.bin

# 0x7C00
 FA                          # cli
 EA 06 7C 00 00              # jmp word 0x0000:0x7C06

# 0x7C06
 31 C0                       # xor ax,ax
 8E D8                       # mov ds,ax
 8E D0                       # mov ss,ax
 BD 00 10                    # mov bp,0x1000
 89 EC                       # mov sp,bp

 BE 3A 7C                    # mov si,0x7C40
# E8 46 00                   # call word 0x7C77
 9A 77 7C 00 00              # call 0x0000:0x7C77

 B8 00 00                    # mov ax,0x0000     segmento_onde_escrever
 8E C0                       # mov es,ax
 BB 00 20                    # mov bx,0x2000     offset_de_onde_escrever
 B0 14                       # mov al,0x14       n_setores_a_copiar (máximo 0x48) (0x40 eh meio segmento)
 B5 00                       # mov ch,0x00       Bottom 8 bits of cylinder number (0-based)
 B1 03                       # mov cl,0x03       setor. (bits 6-7 are high bits of "cylinder")
 B6 00                       # mov dh,0x00       Head number (0-based).
                             # mov dl,0x80       Drive number
 B4 02                       # mov ah,0x02       Function Read Sectors.
 CD 13                       # int 0x13

 72 05                       # jc 0x7C32
 EA 00 20 00 00              # jmp word 0x0000:0x2000

 BE 42 7C                    # mov si,0x7C50
# E8 25 00                    # call word 0x7C77
 9A 77 7C 00 00              # call 0x0000:0x7C77

# 0x7C38
 EB FE                       # jmp short 0x7C38
 90                          # nop
 90                          # nop

# é melhor terminar o programa com cli and hlt


# 0x7C40 
 54 42 4C 2E 2E 2E 20 00     # "TBL... "
 00 00 00 00 00 00 00 00

# 0x7C50
 69 6E 74 20 31 33 20 41 48 20 30 32 20 66 61 6C 68
 6F 75 00 # "int 13 AH 02 falhou"

 00 00 00 00 00 00 00 00 00 00 00 90

# 0x7C70
 BB 01 00                    # mov bx,0x0001
 B4 0E                       # mov ah,0x0E
 CD 10                       # int 0x10

# 0x7C77
 AC                          # lodsb
 3C 00                       # cmp al,0x00
 75 F4                       # jnz 0x7C56
 C3                          # ret
 00 00 00

# 0x7C80
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

# 0x7D00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00

 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

# tabela de partição
# .byte 0x00              # 0x80             #   partition flag ou boot indicator (se for 80h, é a partição ativa, se 00h, não é)
# .byte 0x00, 0x00, 0x00  # 0xFE, 0xFF, 0xFF #   start CHS
# .byte 0x00              # 0x0C             #   Partition byte (Descrição do tipo da partição) # 0x0C = FAT32 (LBA)
# .byte 0x00, 0x00, 0x00  # 0xFE, 0xFF, 0xFF #   End CHS
#                                           # (mbr + bootloader + kernel    + initrd    + reserva) * 512 # Start LBA
#.long 0x00000000        # 0x00019018       #  2   + 10*2       + 10*1024*2 + 40*1024*2 + 2              # kernel: 10 MiB, initrd: 40 MiB 
#.long 0x00000000        # 0x01000000       #  32 MiB


# 7DFE
 55 AA                       # fim da mbr

