DEPMOD(8)
03 March 2009

SYNOPSIS
depmod [ -b basedir ] [ -e ] [ -F System.map ] [ -n ] [ -v ] [ version ] [ -A ]

depmod [ -e ] [ -FSystem.map ] [ -n ] [ -v ] [ version ] [ filename ... ]


DESCRIPTION
depmod generate the file /lib/modules/$KERNEL_VERSION/modules.dep with module dependency.
Linux kernel modules can provide services (called "symbols") for other modules to use (using EXPORT_SYMBOL in the code).  If a second module uses this symbol, that second module clearly depends on the first module.

If filenames are given on the command line, only those modules are examined (which is rarely useful, unless all modules are listed).
If a version is provided, then that kernel version's module directory is used, rather than the current kernel version (as returned by "uname -r").

depmod will also generate various map files in this directory, for use by the hotplug infrastructure.

OPTIONS
-a --all
   Probe all modules. This option is enabled by default if no file names are given in the command-line.

-A --quick
   This option scans to see if any modules are newer than the modules.dep file before any work is done: if not, it silently exits rather than regenerating the files.

-b basedir --basedir basedir
   If your modules are not currently in the (normal) directory /lib/modules/version, but in a staging area, you can specify a basedir which is prepended to the directory name.  This basedir is stripped from the resulting modules.dep file, so it is ready to be moved into the normal location.

-C --config file or directory
   This option overrides the default configuration file (/etc/depmod.conf or /etc/depmod.d/ if that is not found).

-e --errsyms
   When combined with the -F option, this reports any symbols which a module needs which are not supplied by other modules or the kernel.  Normally, any symbols not provided by modules are assumed to be provided by the kernel (which should be true in a perfect world).

-F --filesyms System.map
   Supplied with the System.map produced when the kernel was built, this allows the -e option to report unresolved symbols.

-h --help
   Print the help message, and exit.

-n --dry-run
   This sends the resulting modules.dep, then the various map files, to standard output, rather than writing them into the module directory.

-v --verbose
   In verbose mode depmod will print (to stdout) all the symbols each module depends on and the module's file name which provides that symbol.

-V --version
   Show version of program, and exit. See below for caveats when run on older kernels.

