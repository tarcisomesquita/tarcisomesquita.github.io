# cd /media/arq_preto/linux-3.17.4

/media/SD/pacotes/7za e -so /media/SD/so_ubuntu_9.04/kernel/linux-3.17.4.tar.xz | tar -x


arch/x86/boot/main.c
arch/x86/boot/pm.c

# gedit init/main.c

edite start_kernel()

ela chama as funções:
mount_root
do_initcalls
run_init_process


make -n bzImage
Os comando abaixo foram obtidos com o comando acima.

# -E -dMDI -CC -o arch/x86/boot/main.pre.c arch/x86/boot/main.c


clear ; \
gcc -Wp,-MD,arch/x86/boot/.main.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.3.3/include -I/media/arq_preto/linux-3.15.5/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/media/arq_preto/linux-3.15.5/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/media/arq_preto/linux-3.15.5/include/uapi -Iinclude/generated/uapi -include /media/arq_preto/linux-3.15.5/include/linux/kconfig.h -D__KERNEL__ -m32 -include /media/arq_preto/linux-3.15.5/arch/x86/boot/code16gcc.h -fno-toplevel-reorder -g -Os -D__KERNEL__ -DDISABLE_BRANCH_PROFILING -Wall -Wstrict-prototypes -march=i386 -mregparm=3 -fno-strict-aliasing -fomit-frame-pointer -fno-pic -mno-mmx -mno-sse -ffreestanding -fno-stack-protector -mpreferred-stack-boundary=2 -D_SETUP    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(main)"  -D"KBUILD_MODNAME=KBUILD_STR(main)" -c -o arch/x86/boot/main.o arch/x86/boot/main.c && \
gcc -Wp,-MD,arch/x86/boot/.pm.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.3.3/include -I/media/arq_preto/linux-3.15.5/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/media/arq_preto/linux-3.15.5/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/media/arq_preto/linux-3.15.5/include/uapi -Iinclude/generated/uapi -include /media/arq_preto/linux-3.15.5/include/linux/kconfig.h -D__KERNEL__ -m32 -include /media/arq_preto/linux-3.15.5/arch/x86/boot/code16gcc.h -fno-toplevel-reorder -g -Os -D__KERNEL__ -DDISABLE_BRANCH_PROFILING -Wall -Wstrict-prototypes -march=i386 -mregparm=3 -fno-strict-aliasing -fomit-frame-pointer -fno-pic -mno-mmx -mno-sse -ffreestanding -fno-stack-protector -mpreferred-stack-boundary=2 -D_SETUP    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(pm)"  -D"KBUILD_MODNAME=KBUILD_STR(pm)" -c -o arch/x86/boot/pm.o arch/x86/boot/pm.c && \
\
ld -m elf_i386   -T arch/x86/boot/setup.ld arch/x86/boot/a20.o arch/x86/boot/bioscall.o arch/x86/boot/cmdline.o arch/x86/boot/copy.o arch/x86/boot/cpu.o arch/x86/boot/cpuflags.o arch/x86/boot/cpucheck.o arch/x86/boot/early_serial_console.o arch/x86/boot/edd.o arch/x86/boot/header.o arch/x86/boot/main.o arch/x86/boot/mca.o arch/x86/boot/memory.o arch/x86/boot/pm.o arch/x86/boot/pmjump.o arch/x86/boot/printf.o arch/x86/boot/regs.o arch/x86/boot/string.o arch/x86/boot/tty.o arch/x86/boot/video.o arch/x86/boot/video-mode.o arch/x86/boot/version.o arch/x86/boot/video-vga.o arch/x86/boot/video-vesa.o arch/x86/boot/video-bios.o -o arch/x86/boot/setup.elf && \
\
objcopy  -O binary arch/x86/boot/setup.elf arch/x86/boot/setup.bin && \
\
arch/x86/boot/tools/build arch/x86/boot/setup.bin arch/x86/boot/vmlinux.bin arch/x86/boot/zoffset.h arch/x86/boot/bzImage && \
\
dd if=arch/x86/boot/bzImage of=/home/ubuntu/Desktop/boot.bin bs=512 seek=$((2 + 20)) conv=notrunc && \
\
ls -l arch/x86/boot/bzImage

