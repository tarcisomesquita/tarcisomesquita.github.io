
<!DOCTYPE html>
<html lang="pt-BR">
<head>
<meta charset="utf-8">
<title>teste</title>
<meta name="description" content="Página de teste.">
<meta name="viewport" content="width=device-width,initial-scale=1">

<script src="https://accounts.google.com/gsi/client" async defer></script>

<script>
function handleCredentialResponse(response) {
  const idToken = response.credential;
  console.log("ID Token: ", idToken);
  
  fetch(`https://oauth2.googleapis.com/tokeninfo?id_token=${idToken}`)
    .then(res => res.json())
    .then(data => {
      console.log("Informações do ID Token:", data);
      // Aqui você pode acessar os dados do usuário, como data.email, data.name
    })
    .catch(error => console.error("Erro ao validar token:", error));
}
</script>
</head>

<body>
<!-- Para obter o SEU_CLIENT_ID, você precisa criar um projeto no Google Cloud Console, habilitar a API Google People (se precisar de informações de perfil) e configurar uma tela de consentimento OAuth e credenciais de "ID do cliente OAuth 2.0" do tipo "Aplicativo da Web". -->
<div id="g_id_onload" data-client_id="SEU_CLIENT_ID.apps.googleusercontent.com" data-callback="handleCredentialResponse"></div>
<div class="g_id_signin" data-type="standard"></div>

<p>Teste</p>
</body>
</html>

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

como mudar o botão "sign in with Google"
Explique os atributos de
<div class="g_id_signin"
data-type="standard"
data-size="large"
data-theme="outline"
data-text="continue_with"
data-shape="rectangular"
data-logo_alignment="left">
</div>

data-type=
   Propósito: Define o tipo de botão de login a ser exibido.
   Valores possíveis: "standard" | "icon"

data-size=
   Propósito: Controla o tamanho do botão.
   Valores possíveis: "small" | "medium" | "large"

data-theme=
   Propósito: Define o estilo visual do botão (tema).
   Valores possíveis:
      "outline": O botão tem um fundo branco com uma borda cinza clara, e o logotipo e texto do Google são coloridos.
      "filled_blue": O botão tem um fundo azul preenchido com texto branco.
      "filled_black": O botão tem um fundo preto preenchido com texto branco.

data-text=
   Propósito: Define o texto exibido no botão. A biblioteca GSI traduzirá este valor para o idioma do navegador do usuário.
   Valores possíveis: "signin_with" | "continue_with" | "signup_with"

data-shape=
   Propósito: Define a forma das bordas do botão.
   Valores possíveis: "rectangular" | "pill" | "circle" | "square"

data-logo_alignment=
   Propósito: Controla o alinhamento do logotipo do Google dentro do botão.
   Valores possíveis:  "left" | "center"

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

https://myaccount.google.com/permissions?hl=pt-br
Quem faz login com Google

function listDriveFilesDirectly() {
  var accessToken = ScriptApp.getOAuthToken(); // mesmas permissões que as concedidas ao script

  var url = 'https://www.googleapis.com/drive/v3/files?pageSize=10&fields=files(id,name,mimeType,modifiedTime)';
  
  var options = {
    'headers': {
      'Authorization': 'Bearer ' + accessToken
    },
    'muteHttpExceptions': true // Não lançar exceções para erros HTTP
  };

  var response = UrlFetchApp.fetch(url, options);
  var json = JSON.parse(response.getContentText());

  if (response.getResponseCode() == 200) {
    Logger.log('Arquivos encontrados:');
    json.files.forEach(function(file) {
      Logger.log('  Nome: %s, ID: %s', file.name, file.id);
    });
  } else {
    Logger.log('Erro ao buscar arquivos: %s', json.error.message);
  }
}

APIs ativas
https://console.cloud.google.com/apis/dashboard?hl=pt-br&project=concluir

https://developers.google.com/sheets/api/quickstart/js?hl=pt_BR

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

https://console.cloud.google.com/
Criar credenciais > ID do cliente OAuth
Tipo de aplicativo, selecione Aplicativo da Web
Adicione o URI do seu site às origens JavaScript autorizadas

https://console.developers.google.com/apis/credentials/consent?hl=pt-br
Domínios autorizados

https://console.cloud.google.com/apis/credentials/consent?project=github-ceejapd-id

Acesso às APIs do Google para apps da web javascript

1) Go to the Credentials page (https://console.developers.google.com/apis/credentials?hl=pt-br).
   Selecione um projeto
2) Clique em Criar credenciais > ID do cliente OAuth.
3) Selecione o tipo de aplicativo Web app.
4) Preencha o formulário.

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

Como posso obter o token para usar com https://oauth2.googleapis.com/tokeninfo?id_token=${token} 

distinção importante entre access_token e id_token
É usado para autorização (ScriptApp.getOAuthToken())
É usado para autenticação (login)


