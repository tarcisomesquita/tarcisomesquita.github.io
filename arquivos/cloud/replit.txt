https://replit.com/@tarcisomesquita
https://replit.com/@seddecourt

http://REPL-NAME.USERNAME.repl.co
https://blank.tarcisomesquita.repl.co

When REPL-NAME and USERNAME are equals.
https://USERNAME.repl.co
https://tarcisomesquita.repl.co

disponível https://replit.com/@concluir

Changes made to your repl will not be reflected in the live version until the web project is re-run.

Clear the repl before deleting, because public link will persist.

Repls typically go to sleep after a period (how many time?) of inactivity.

10 GiB de HD
512 MiB de RAM
0.5 vCPU

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

importar de https://github.com/tarcisomesquita/blankRepl

blank repl  // A blank repl to build anything you want in any language.
php web server
bash
Node.js

search more templetes in:
https://replit.com/@replit

Examples:
[HTML, CSS, JS](https://replit.com/@replit/HTML-CSS-JS?v=1#.replit)
[Node.js](https://replit.com/@replit/Nodejs?v=1#.replit)
[C++](https://replit.com/@replit/CPlusPlus?v=1#.replit)
[Python](https://replit.com/@replit/Python?v=1)
[Java](https://replit.com/@replit/Java?v=1#.replit)

https://search.nixos.org/packages
pacotes disponíveis

$ cat replit.nix
{ pkgs }: {
  deps = [
    pkgs.netcat-gnu
  ];
}

$ cat .replit 
onBoot = ["teste.sh"]
run = ["teste.sh"]
entrypoint = "teste.sh"
modules = ["web"]

[nix]
channel = "stable-24_05"

[deployment]
publicDir = "/"
deploymentTarget = "static"

[[ports]]
localPort = 8080
externalPort = 80

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

# The command that is executed when the run button is clicked.
run = ["cargo", "run"]

# The default file opened in the editor.
entrypoint = "src/main.rs"

# Setting envicronment variables
[env]
FOO="foo"

onBoot = ["cargo", "run"]

A `Command` can either be a string or a list of strings. If the `Command` is a string (`"node index.js"`), it will be executed via `sh -c "<Command>"`. If the Command is a list of strings (`["node", "index.js"]`), it will be directly executed with the list of strings passed as arguments.

https://nixos.wiki/wiki/Nix_channels
talvez usar o nix small

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

Base de dados

50 MB per database (sum of keys and values)
5,000 keys per database
5 MB per value

Each Database is private and isolated (not shared between repls).

async function run() {
  const client = new Client();
  await client.set("key1", "value1");
  await client.set("key2", "value2");
  await client.set("key3", "value3");
  let key = await client.get("key1");
  console.log(key);
  let all = await client.getAll();
  console.log(all);
}

console.log(process.env.REPLIT_DB_URL)
const Client = require("@replit/database");
run();

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

delete(String key)

list(String? prefix) // Lists all of the keys, or all of the keys starting with prefix if specifed.

getAll() // Get all key/value pairs and return as an object.

setAll(Object obj)

deleteMultiple(...String args)

empty() // Clears the database. Returns Client

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

Set
curl $REPLIT_DB_URL -d '<key>=<value>'

Get
curl $REPLIT_DB_URL/<key>

Delete
curl -XDELETE $REPLIT_DB_URL/<key>
Delete returns status code 204 if the key was deleted or 404 if the key did not exist.

curl --fail-with-body -XDELETE $REPLIT_DB_URL/tt2
curl: (22) The requested URL returned error: 404

List
curl $REPLIT_DB_URL --get -d 'prefix=<key>'
or
curl "$REPLIT_DB_URL?prefix=<key>"

The returned keys will be separated by newlines.

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

digita o comando nc -v -l 80, depois aceita instalar o netcat-bsd

cat > index.http << EOF
HTTP/1.1 200 OK
Content-Type: text/html; charset=UTF-8
Server: netcat!

<!doctype html>
<html><body><h1>A webpage served by netcat</h1></body></html>
EOF

cat > main.sh << EOF
#!/bin/bash
for (( ; ; )); do 
  echo -e " = = = = = = = = = = \n$(TZ='America/Sao_Paulo' date --iso-8601=ns)\n"; 
  cat index.http | nc --close -l -p 8080; 
done
EOF

chmod +x main.sh

sed -i 's|^run = .*$|run = "/home/runner/workspace/main.sh"|' .replit

clicar no botão verde "Run", executa main.sh, mostra em "console" o resultado
em shell, usar ps aux

https://blank.tarcisomesquita.repl.co

 = = = = = = = = = = = = = = = = = = = = = = = = = = = =

Use Tools > Secrets para armazenar senhas.
